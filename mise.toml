[settings]
python.uv_venv_auto = true

[tasks.release]
description = "Tag a new release."
run = """
#!/usr/bin/env bash
set -euo pipefail
if [ -n \"$(git status --porcelain)\" ]; then
  echo >&2 \"Error: git working directory has uncommitted changes.\"
  echo >&2 \"Please commit or stash them before releasing.\"
  exit 1
fi
current_branch=$(git rev-parse --abbrev-ref HEAD)
if [ \"$current_branch\" != \"main\" ]; then
  echo >&2 \"Error: releases must be done from 'main' branch. Current branch is '$current_branch'.\"
  exit 1
fi
if ! uv run pytest; then
  echo >&2 "Error: tests failed. Aborting release."
  exit 1
fi
full_version=$(uv version)
version=${full_version##* }
if [[ -z $version ]]; then
  echo >&2 "Could not parse version from 'uv version' output: '$full_version'"
  exit 1
fi
if git tag --list | grep -Fxq \"$version\"; then
  echo >&2 \"Error: tag '$version' already exists.\"
  echo >&2 \"Hint: bump version first with 'uv version --bump [patch|minor|major] && git commit -a' and rerun this task.\"
  exit 1
fi
git tag \"$version\"
echo \"✔ Created tag '$version'.\"
git push  && git push origin $version
echo \"✔ Pushed commits and tag for $version. Waiting 5s for GHA release workflow.\"
sleep 5
gha_json=$(gh run list --workflow Release --json url -b $version)
count=$(echo \"$gha_json\" | jq 'length')
if [[ $count -gt 1 ]]; then
  echo >&2 \"Warning: found $count GHA runs for tag '$version'. Using the first one found.\"
fi
gha_url=$(echo \"$gha_json\" | jq -r '.[0].url')
echo "Release GHA: $gha_url"
"""
